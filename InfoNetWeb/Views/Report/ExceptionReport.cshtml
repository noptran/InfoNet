@using Infonet.Reporting.Enumerations
@using Infonet.Web.Models.Reporting
@model Infonet.Reporting.ViewModels.ExceptionReportViewModel
@{
	ViewBag.Title = "Exception Reports";
	int i = 0;
}
@using (Html.BeginForm("ExceptionReportRun", "Report", FormMethod.Post, new { id = "main", autocomplete = "off", target = "_blank" })) {
	@Html.AntiForgeryToken()
			@Html.Partial("Reports/_CenterSelection", Model)
			<div class="row">
				<div class="col-sm-12 col-md-12 col-lg-12">
					<div class="panel panel-primary">
						<div class="panel-heading">
							<h2 class="panel-title">Report Selection</h2>
						</div>
						<div class="panel-body" style="padding-top: 25px; padding-bottom: 20px">
							@foreach (var reportType in Model.AvailableSelectionTypes) {
								string chkd = string.Empty;
								if (!Model.AvailableSelectionTypes.Contains(Model.ReportSelectionType) && i == 0) {
									chkd = "checked=checked";
								} else if (Model.ReportSelectionType == reportType) {
									chkd = "checked=checked";
								}
								i++;
								string childId = null;
								switch (reportType) {
									case SubReportSelection.ExcRptLengthyShelterUse:
										childId = "data-icjia-child-id=#lengthyShelter";
										break;
									case SubReportSelection.ExcRptOpenClientCases:
										childId = "data-icjia-child-id=#openCases";
										break;
									case SubReportSelection.ExcRptClientsWithUNRUFields:
										childId = "data-icjia-child-id=#unkNRUna";
										break;
									case SubReportSelection.ExcRptClientsWithoutOffenderInformation:
										childId = "data-icjia-child-id=#noOffenderInfo";
										break;
								}
								<div class="col-md-6">
									<div class="radio mt-0" style="margin-bottom: 5px">
										<label>
											<input type="radio" class="reportSelectionRadio" id="selection@((int)reportType)" name="@Html.NameFor(m => m.ReportSelectionType)" value="@((int)reportType)" @childId @chkd />
											@reportType.GetDisplayName()
										</label>
									</div>
								</div>
							}
						</div>
					</div>
				</div>
			</div>
			<div id="propertiesRow" class="row">
				<div class="col-sm-12 col-md-12 col-lg-12">
					<div class="panel panel-primary icjia-error-group">
						<div class="panel-heading">
							<h2 class="panel-title">Report Properties</h2>
						</div>
						@if (Session.Center().Provider == Provider.DV) {
							<div id="lengthyShelter" class="panel-body reportProperty" style="display:none">
								<div class="row">
									<div class="col-xs-offset-3 col-xs-6 col-sm-offset-4 col-sm-4 col-md-offset-5 col-md-2 text-center">
										<div class="form-group">
											@Html.LabelFor(m => m.ShelterDaysExceed, new { @class = "control-label icjia-required" })
											@Html.TextBoxFor(m => m.ShelterDaysExceed, new { @class = "form-control", data_val="true", data_val_required = "Shelter Days Exceed is required." })
											@Html.ValidationMessageFor(m => m.ShelterDaysExceed, "", new { @class = "help-block" })
										</div>
									</div>
								</div>
							</div>
						}
						<div id="openCases" class="panel-body reportProperty" style="display:none">
							<div class="row">
								<div class="col-xs-offset-3 col-xs-6 col-sm-offset-4 col-sm-4 col-md-offset-5 col-md-2 text-center">
									<div class="form-group">
										@Html.LabelFor(m => m.OpenCases, new { @class = "control-label icjia-required" })
										@Html.TextBoxFor(m => m.OpenCases, new { @class = "form-control", data_val="true", data_val_required= "Last Date of Service Exceeds field is required." })
										@Html.ValidationMessageFor(m => m.OpenCases, "", new { @class = "help-block" })
									</div>
								</div>
							</div>
						</div>
						<div id="unkNRUna" class="panel-body reportProperty" style="display:none">
							<div class="row">
								<div class="col-sm-8">
									<div class="form-group">
										@Html.Label("Start1", "Date Range", new { @class = "control-label icjia-required" })
										<div class="input-daterange input-group" data-provide="datepicker">
											@Html.TextBoxFor(model => model.UNRUStartDate, "{0:MM/dd/yyyy}", new { @class = "form-control", id = "Start1", data_val = "true", data_val_required = "Start Date is required." })
											<span class="input-group-addon"><b>to</b></span>
											@Html.TextBoxFor(model => model.UNRUEndDate, "{0:MM/dd/yyyy}", new { @class = "form-control", id = "End1", data_val = "true", data_val_required = "End Date is required." })
										</div>
                                        @Html.ValidationMessageFor(model => model.UNRUStartDate, "", new { @class = "help-block" })
                                        @Html.ValidationMessageFor(model => model.UNRUEndDate, "", new { @class = "help-block" })
									</div>
								</div>
								<div class="col-sm-4">
									<div class="form-group">
										@Html.Label("rangePeriodChosen", "Ranges", new { @class = "control-label" })
										<select class="form-control col-md-3" name="UNRURange" id="rangePeriodChosen" data-icjia-role="dateRanges" data-icjia-start="#Start1" data-icjia-end="#End1" data-icjia-default-range="@Model.UNRURange">
											@Html.Partial("_DateRangeOptions1-4_20_5-19")
										</select>
									</div>
								</div>
							</div>
							<div class="row">
								@foreach (var field in Model.AvailableUNRUDataFieldsSelections) {
									string chkd = string.Empty;
									if (Model.UNRUDataFieldsSelections != null && Model.UNRUDataFieldsSelections.Contains(field)) {
										chkd = "checked='checked'";
									}
									<div class="col-xs-6 col-sm-4 col-md-3">
										<div class="checkbox">
											<label>
												<input type="checkbox" name="@Html.NameFor(model => model.UNRUDataFieldsSelections)" value="@((int)field)" data-icjia-parent-id="#selection@((int)ReportSelection.MngRptClient)" @chkd /> @( field.GetShortName() )
											</label>
										</div>
									</div>
								}
							</div>
							<div class="row">
								<div class="col-xs-12">
									<span id="UNRUDataFieldsSelectionsHelp" class="help-block hide">You must specify at least one property.</span>
								</div>
							</div>
							<div class="row">
								<div class="col-xs-12">
									<div class="text-center">
										<button type="button" id="selectAllButton" class="btn btn-primary">Select All</button>
										<button type="button" id="deselectAllButton" class="btn btn-default">Deselect All</button>
									</div>
								</div>
							</div>
						</div>
						<div id="noOffenderInfo" class="panel-body reportProperty" style="display:none">
							<div class="row">
								<div class="col-sm-8">
									<div class="form-group">
										@Html.Label("Start2", "Date Range", new { @class = "control-label icjia-required" })
										<div class="input-daterange input-group" data-provide="datepicker">
											@Html.TextBoxFor(model => model.OffenderStartDate, "{0:MM/dd/yyyy}", new { @class = "form-control", id = "Start2", data_val = "true", data_val_required = "Start Date is required." })
											<span class="input-group-addon"><b>to</b></span>
											@Html.TextBoxFor(model => model.OffenderEndDate, "{0:MM/dd/yyyy}", new { @class = "form-control", id = "End2", data_val = "true", data_val_required = "End Date is required." })
										</div>
										@Html.ValidationMessageFor(model => model.OffenderStartDate, "", new { @class = "help-block" })
                                        @Html.ValidationMessageFor(model => model.OffenderEndDate, "", new { @class = "help-block" })
									</div>
								</div>
								<div class="col-sm-4">
									<div class="form-group">
										@Html.Label("rangePeriodChosen2", "Ranges", new { @class = "control-label" })
										<select class="form-control col-md-3" name="Range" id="rangePeriodChosen2" data-icjia-role="dateRanges" data-icjia-start="#Start2" data-icjia-end="#End2" data-icjia-default-range="@Model.OffenderRange">
											@Html.Partial("_DateRangeOptions1-4_20_5-19")
										</select>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="row" style="margin-bottom:256px">
				<div class="col-sm-6 col-md-offset-2 col-md-4 col-lg-offset-3 col-lg-3">
					<div class="col-xs-8 col-sm-9 col-md-10" style="padding-right:4px">
						<div class="form-group">
							@Html.LabelFor(m => m.OutputType, new { @class = "control-label" })
							<select id="@Html.IdFor(m => m.OutputType)" name="@Html.NameFor(m => m.OutputType)" class="form-control pull-right">
								@foreach (ReportOutputType type in Enum.GetValues(typeof(ReportOutputType))) {
									<option value="@(type.ToInt32())">@type.GetDisplayName()</option>
								}
							</select>
						</div>
					</div>
					<div class="col-xs-4 col-sm-3 col-md-2" style="padding-left:4px">
						<a id="pdfModalToggle" href="#pdfModal" data-toggle="modal" class="btn btn-default hide" style="margin-top:25px"><span class="glyphicon glyphicon-cog"></span></a>
					</div>
				</div>
				<div class="col-xs-6 col" style="margin-top:25px">
					<button type="button" class="btn btn-primary text-center" id="Generate" name="Search">
						Generate
					</button>
				</div>
			</div>
			<div id="pdfModal" class="modal fade" role="dialog">
				<div class="modal-dialog">
					<!-- Modal content-->
					<div class="modal-content">
						<div class="modal-header">
							<button type="button" class="close" data-dismiss="modal">&times;</button>
							<h4 class="modal-title">Pdf Settings</h4>
						</div>
						<div class="modal-body">
							<div class="row">
								<div class="col-sm-6">
									<div class="form-group">
										@Html.LabelFor(m => m.PdfSize)
										@Html.DropDownListFor(m => m.PdfSize, ReportFilterListGenerator.GetPdfSizeSelectList(), new { @class = "form-control" })
									</div>
								</div>
								<div class="col-sm-6">
									<div class="form-group">
										@Html.LabelFor(m => m.Orientation)
										@Html.DropDownListFor(m => m.Orientation, ReportFilterListGenerator.GetPdfOrientationSelectList(), new { @class = "form-control" })
									</div>
								</div>
							</div>
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
						</div>
					</div>

				</div>
			</div>
}

@section Styles {
	@Styles.Render("~/Content/ICJIA/checkbox.css")
}

@section Scripts {
	@Scripts.Render("~/Scripts/chosen.jquery.min.js")
	@Scripts.Render("~/Scripts/ICJIA/date-ranges.js")
	@Scripts.Render("~/Scripts/Views/Reports/ExceptionReport.js")
	@Scripts.Render("~/Scripts/Views/Reports/ReportOutput.js")
}
