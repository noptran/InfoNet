@using PagedList.Mvc;
@using PagedList;
@model IPagedList<HousingServicesModify>

<div class="row">
	<div class="col-sm-12">
		<div class="table-responsive">
			<table class="table table-striped table-bordered table-list" id="housingServiceTableEdit" data-assigned-id="@Model">
				<thead>
					<tr>
						<th scope="col" class="col-sm-2">Action</th>
						<th scope="col" class="col-sm-4"><span class="icjia-required" data-toggle="tooltip" title="Select the Housing Service client received from the drop-down menu.">Service</span></th>
						<th scope="col" class="col-sm-3"><span class="icjia-required" data-toggle="tooltip" title="Enter date the client first entered the Shelter/Trans. Housing Program.">Shelter Begin</span></th>
						<th scope="col" class="col-sm-3"><span data-toggle="tooltip" title="Date the client left the Shelter/Trans. Housing Program.">Shelter End</span></th>
					</tr>
				</thead>
				<tbody>
					@{
						if (Model != null) {
							var housingServicesServiceFullList = "HousingServicesEditHousingServices";
								for (var i = 0; i < Model.Count(); i++) {
									var setIndex = Model[i].Index != null ? Model[i].Index : i;
									if (i == 0) {
										@Html.LookupFor(model => model[i].ServiceID, Lookups.HousingServices[Session.Center().Provider], "<Pick One>", false, new { @class = "form-control hidden", Id = housingServicesServiceFullList, Name = housingServicesServiceFullList })
									}

								<tr data-icjia-role="clientsidepagination">
									<td class="text-center">
										<div class="form-group" style="margin:0px; width:130px;">
											@if (Model[i].LocationID == Session.Center().Id) {
												<label>
													@Html.CheckBox("HousingServicesEdit[" + setIndex + "].IsEdited", Model[i].IsEdited, new { Id = "HousingServicesEdit_" + setIndex + "__IsEdited", Onchange = "checkboxEnableRow(this); actionCheckboxUncheck(this)" })
													Edit
												</label>
												<span style="padding-right:10px;"></span>
												<label>
													@Html.CheckBox("HousingServicesEdit[" + setIndex + "].IsDeleted", Model[i].IsDeleted, new { Id = "HousingServicesEdit_" + setIndex + "__IsDeleted", Onchange = "housingServiceCheckboxDisableRow(this); actionCheckboxUncheck(this);", data_icjia_role = "housing.service.isdeleted" })
													Delete
												</label>
											} else {
												<h4><span class="label label-info" style="vertical-align:top;">Read Only</span></h4>
											}
											<input type="hidden" name="HousingServicesEdit[@(setIndex)].ICS_ID" value="@Model[i].ICS_ID" />
											<input type="hidden" name="HousingServicesEdit[@(setIndex)].ServiceDetailID" value="@Model[i].ServiceDetailID" />
											<input type="hidden" name="HousingServicesEdit[@(setIndex)].LocationID" value="@Model[i].LocationID" />
										</div>
									</td>
									<td>
										<div class="form-group" style="margin:0px; min-width:250px;">
											@Html.LookupFor(model => model[i].ServiceID, Model[i].IsEdited ? Lookups.HousingServices[Session.Center().Provider] : (IEnumerable<LookupCode>)new[] { Lookups.HousingServices[Model[i].ServiceID] }
												, "<Pick One>", true,
												Html.Attributes(new { @class = "form-control", Name = "HousingServicesEdit[" + setIndex + "].ServiceID", Id = "HousingServicesEdit_" + setIndex + "__ServiceID", data_icjia_change_dropdown = housingServicesServiceFullList }).AndIf(!Model[i].IsEdited, new { Disabled = true }))
											@Html.ValidationMessage("HousingServicesEdit[" + setIndex + "].ServiceID", "", new { @class = "help-block" })
										</div>
									</td>
									<td>
										<div class="form-group" style="margin:0px; min-width:100px;">
											@Html.TextBoxFor(model => model[i].ShelterBegDate, "{0:MM/dd/yyyy}",
							Html.Attributes(new { data_provide = "datepicker", data_date_end_date = DateTime.Today.ToShortDateString(), Class = "form-control date group1 inline-date", Name = "HousingServicesEdit[" + setIndex + "].ShelterBegDate", Id = "HousingServicesEdit_" + setIndex + "__ShelterBegDate", data_val_firstcontactdate = "Shelter Begin cannot be earlier than the case's First Contact Date." }).AndIf(!Model[i].IsEdited, new { Disabled = true }))
											@Html.ValidationMessage("HousingServicesEdit[" + setIndex + "].ShelterBegDate", "", new { @class = "help-block" })
										</div>
									</td>
									<td>
										<div class="form-group" style="margin:0px; min-width:100px;">
											@Html.TextBoxFor(model => model[i].ShelterEndDate, "{0:MM/dd/yyyy}",
							Html.Attributes(new { data_provide = "datepicker", data_date_end_date = DateTime.Today.ToShortDateString(), Class = "form-control date group1 inline-date", Name = "HousingServicesEdit[" + setIndex + "].ShelterEndDate", Id = "HousingServicesEdit_" + setIndex + "__ShelterEndDate", data_val_firstcontactdate = "Shelter End cannot be earlier than the case's First Contact Date." }).AndIf(!Model[i].IsEdited, new { Disabled = true }))
											@Html.ValidationMessage("HousingServicesEdit[" + setIndex + "].ShelterEndDate", "", new { @class = "help-block" })
										</div>

										<input type="hidden" name="HousingServicesEdit[@(setIndex)].ServiceID" value="@Model[i].ServiceID" />
										<input type="hidden" name="HousingServicesEdit[@(setIndex)].ShelterBegDate" value='@(Model[i].ShelterBegDate.HasValue? Model[i].ShelterBegDate.Value.ToShortDateString() : "") ' />
										<input type="hidden" name="HousingServicesEdit[@(setIndex)].ShelterEndDate" value='@(Model[i].ShelterEndDate.HasValue? Model[i].ShelterEndDate.Value.ToShortDateString() : "") ' />
									</td>
								</tr>

							}
						}
					}
				</tbody>
			</table>
			<div class="form-group" id="housingServicesPagedList" data-pagination-link="@Url.Action("HousingServicesSearch")">
				@Html.PagedListPager(Model, page => Url.Action("HousingServicesSearch", "Case", new {
			   page, }), Html.Snippets().PagedListRenderOptions(new[] { "housingServicesPagedList", "dirtyignore" }, new[] { "pagedListMultiples" }))
				@Html.Partial("_PagedListFooter", Model, new ViewDataDictionary { { "isMultiples", true }, { "id", "HousingServiceSearchDates_[0]__PageSize" }, { "name", "HousingServiceSearchDates[0].PageSize" }, { "class", "" }, { "paginationFor", "housing.services" } })
				@Html.Hidden("HousingServiceSearchDates[0].Page", Model.PageNumber)
			</div>
		</div>
	</div>
</div>