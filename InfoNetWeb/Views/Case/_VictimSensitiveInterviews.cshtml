@model ClientCase
<div class="table-responsive">
	<table class="table">
		<thead class="icjia-panel-subheader">
			@{ var SAMPLE_INTERVIEW = new VictimSensitiveInterview(); }
			<tr>
				<th scope="col" style="padding-left: 40px">@Html.DisplayNameFor(m => SAMPLE_INTERVIEW.InterviewDate)</th>
				<th scope="col">@Html.DisplayNameFor(m => SAMPLE_INTERVIEW.SiteLocationId)</th>
				<th scope="col">@Html.DisplayNameFor(m => SAMPLE_INTERVIEW.InterviewerID)</th>
				<th scope="col">@Html.DisplayNameFor(m => SAMPLE_INTERVIEW.RecordTypeID)</th>
				<th scope="col">@Html.DisplayNameFor(m => SAMPLE_INTERVIEW.CourtesyInterview)</th>
				<th scope="col">Observers</th>
                <th scope="col"><span class="sr-only">Action</span></th>
			</tr>
		</thead>
		<tbody>
			@{
				var interview = Model.VictimSensitiveInterviewsById;
			}
			@foreach (var each in interview.KeysFor(interview.Values.Concat(interview.Values.Restorable).OrderByDescending(c => c.VSI_ID.HasValue).ThenBy(c => c.InterviewDate).ThenBy(c => interview.KeyFor(c).Occurrence))) {
				bool isNew = each.Components[0] == null;
				string prefix = interview.ContainsKey(each) ? (isNew ? "+" : "=") : (isNew ? "~" : "-");
				@Html.Partial("_VictimSensitiveInterviews_Interview", Model, ViewData.CopyWith(new { interviewKey = each, interviewKeyPrefix = prefix }))
			}
		</tbody>
		<tfoot>
			<tr>
				<td colspan="7" class="text-right">
					<button type="button" class="btn btn-xs btn-primary btn-icon" aria-label="Add New Victim Sensitive Interview"
							data-icjia-role="interview.add" data-icjia-mustache-next='{ "key": @Model.VictimSensitiveInterviewsById.NextOccurrenceFor(null) }'>
						<span class="glyphicon glyphicon-plus"></span>
						@using (var mustache = Html.BeginMustache("script", "--q-", "-p--")) {
							@Html.Partial("_VictimSensitiveInterviews_Interview", Model, ViewData.CopyWith(new { interviewKey = Key.Template(null, mustache.Tag("key")), interviewKeyPrefix = "+" }))
						}
					</button>
				</td>
			</tr>
		</tfoot>
	</table>
</div>