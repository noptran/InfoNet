@model Infonet.Web.ViewModels.Admin.AgenciesLookupViewModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Manage Agency List";
}

@{int agencyCount;}

@if (Model.displayForPaging == null) {
    agencyCount = 0;
} else {
    agencyCount = Model.displayForPaging.Count;
}

@using (Html.BeginForm("Index_Post", "AgencyLookup", FormMethod.Post, new { @class = "main", id = "firstForm", autocomplete = "off", data_icjia_role = "dirty.form" })) {
	@Html.AntiForgeryToken()
    <div class="row">
        <div class="col-xs-12">
            <div class="panel panel-primary" style="margin: 0; margin-top:5px;">
                <div class="panel-heading" data-toggle="collapse" data-target="#addAgencyCollapse">
                    <div class="row">
                        <div class="col-sm-8">
                            <h3 class="panel-title"><a data-toggle="collapse" href="#addAgencyCollapse">Add Agency</a></h3>
                        </div>
                    </div>
                </div>
                <div id="addAgencyCollapse" class="panel-collapse collapse in">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-xs-12">
                                <table class="table table-responsive icjia-table-borderless" id="newAgencies" style="margin-bottom: 0px;">
                                    <thead>
                                        <tr>
                                            <th scope="col" width="55%" style="border:none;"><span data-toggle="tooltip" title="Enter the agency name.">Agency Name</span></th>
                                            <th scope="col" width="25%" style="border:none;"><span data-toggle="tooltip" title="Leave blank if alphabetical sorting is desired.">Display Order</span></th>
                                            <th scope="col" class="text-center" width="10%" style="border:none;"><span data-toggle="tooltip" title="Check this box to indicate this is an active agency. Uncheck if agency has closed or is no longer needed. Only active agencies will display in drop-down menus.">Is Active?</span></th>
                                            <th scope="col" width="10%" style="border:none;"></th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                                <input type="hidden" class="addagency" value="@agencyCount" />
                                <button type="button" class="btn btn-default btn-outline addagency" value="@agencyCount"><span class="glyphicon glyphicon-plus-sign"></span>&nbsp;Add New Agency</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-xs-12">
            <div class="pull-right">
				@Html.Snippets().SaveButton(new { id = "saveButton", data_icjia_role = "preventDuplicateRequest", accesskey = "s" })
				@Html.Snippets().UndoLink(Url.Action(), new { accesskey = "u" })
            </div>
        </div>
    </div>
}
<hr />
        @using (Html.BeginForm("Index", "AgencyLookup", FormMethod.Get, new { autocomplete = "off", id="main" })) {
            <div class="row">
                <div class="col-sm-4 col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AgencyName, new { @class = "control-label", data_toggle = "tooltip", title = "Enter a part of the agency name." })
                        @Html.EditorFor(model => model.AgencyName, new { htmlAttributes = new { @class = @"form-control", type = "text", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.AgencyName, "", new { @class = "help-block" })
                    </div>
                </div>
                <div class="col-sm-4 col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(modelItem => modelItem.IsActive, new { @class = "control-label", data_toggle = "tooltip", title = "Is the agency name you are looking for active?" })
                        @Html.DropDownListFor(modelItem => modelItem.IsActive, new[] { new SelectListItem { Text = "", Value = "" }, new SelectListItem { Text = "Yes", Value = "true" }, new SelectListItem { Text = "No", Value = "false" } }, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-4 col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DisplayOrder, new { @class = "control-label", data_toggle = "tooltip", title = "Pick your desired sort order." })
                        @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = @"form-control", type = "number", step = 1, autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "help-block" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-10">
                    <button type="submit" class="btn btn-primary" id="Search">
                        Filter <span class="glyphicon glyphicon-filter"></span>
                    </button>
                    <button type="submit" class="btn btn-warning" id="clearCriteria">
                        Clear filter criteria <span class="glyphicon glyphicon-erase"></span>
                    </button>
                </div>
            </div>
            <input type="hidden" value="@agencyCount" id="recordCount" />
            <br />
        }


@using (Html.BeginForm("Index_Post", "AgencyLookup", FormMethod.Post, new { @class = "main", id = "secondForm", autocomplete = "off", data_icjia_role = "dirty.form" })) {
	@Html.AntiForgeryToken()
    <div class="row">
        <div class="col-xs-12">
            <table class="table table-hover table-bordered table-responsive" id="searchResults">
                <tr>
                    <th scope="col" class="text-center" width="18%">Action</th>
                    <th scope="col" width="50%">Agency Name</th>
                    <th scope="col" width="22%">Display Order</th>
                    <th scope="col" class="text-center" width="10%">Active?</th>
                </tr>
                @if (Model.AgencyList != null) {
                    for (int i = 0; i < Model.displayForPaging.Count; i++) {
                        <tr>
                            <td class="text-center">
                                @if (Model.displayForPaging[i].CenterID == Model.CenterID) {
                                    <label>
										Edit
										@Html.CheckBoxFor(modelItem => Model.displayForPaging[i].shouldEdit, new { @class = "editRecord" })
									</label>
                                    <label>
										Delete
										@Html.CheckBoxFor(modelItem => Model.displayForPaging[i].shouldDelete, new { @class = "deleteRecord", data_hasreference = Model.displayForPaging[i].hasReference })
									</label>
                                }
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.TextBoxFor(modelItem => Model.displayForPaging[i].AgencyName, new { @class = "form-control rowData", disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => Model.displayForPaging[i].AgencyName, "", new { @class = "help-block" })
                                    @Html.HiddenFor(modelItem => Model.displayForPaging[i].AgencyID)
                                    @Html.HiddenFor(modelItem => Model.displayForPaging[i].ItemAssignmentID)
                                    @Html.HiddenFor(modelItem => Model.displayForPaging[i].CenterID)
                                    @Html.HiddenFor(modelItem => Model.displayForPaging[i].hasReference)
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    @Html.TextBoxFor(modelItem => Model.displayForPaging[i].DisplayOrder, new { type = "number", step = 1, @class = "form-control rowData", disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => Model.displayForPaging[i].DisplayOrder, "", new { @class = "help-block" })
                                </div>
                            </td>
                            <td class="text-center">
                                <div class="form-group" style="padding-top:6px;">
                                    @Html.CheckBoxFor(modelItem => Model.displayForPaging[i].IsActive, new { @class = "rowData", disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => Model.displayForPaging[i].IsActive, "", new { @class = "help-block" })
                                </div>
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>
    </div>
    @Html.HiddenFor(model => model.CenterID)
    <input type="hidden" id="pageNumber" name="PageNumber" value="@Model.PageNumber" />
}

<div class="row">
	<div class="col-sm-12">
		@Html.PagedListPager(Model.AgencyList, page => Url.Action(Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath)),
		new {
			page, Model.PageSize, Model.AgencyName, Model.IsActive, Model.DisplayOrder
		}), Html.Snippets().PagedListRenderOptions())
		@Html.Partial("_PagedListDropMenu", Model, new ViewDataDictionary { { "PagedListUrlAction", Path.GetFileNameWithoutExtension(Server.MapPath(VirtualPath)) } })
	</div>
</div>


@section scripts{
	<script src="~/Scripts/Views/Shared/_SearchEdit.js"></script>
    <script src="~/Scripts/Views/Admin/AgencyLookup.js"></script>
	<script src="~/Scripts/ICJIA/pagedlist.js"></script>
	<script src="~/Scripts/Views/Admin/RetainFilters.js"></script>
}


